openapi: 3.0.0
info:
  title: CheckPoint API
  description: API para la gesti√≥n de videojuegos, listas, perfiles de usuario y m√°s en la aplicaci√≥n CheckPoint. Basado en el UML proporcionado.
  version: 1.0.0
servers:
  - url: /api/v1 # Cambia esto por tu URL base real
    description: Servidor de desarrollo
tags:
  - name: "üßë Usuario"
    description: Operaciones sobre usuarios
  - name: "üé≠ PerfilUsuario"
    description: Operaciones sobre perfiles de usuario
  - name: "üéÆ Juego"
    description: Operaciones sobre juegos (basado en IGDB)
  - name: "üßæ JuegoUsuario"
    description: Operaciones sobre la relaci√≥n entre usuarios y juegos
  - name: "‚è±Ô∏è DuracionJuego"
    description: Operaciones sobre la duraci√≥n de los juegos
  - name: "üóÇÔ∏è Lista"
    description: Operaciones sobre listas de juegos creadas por usuarios
  - name: "üéÆ ListaJuego"
    description: Operaciones para a√±adir/quitar juegos de listas
  - name: "üèÜ TierList"
    description: Operaciones sobre Tier Lists de juegos creadas por usuarios
  - name: "üéÆ TierListJuego"
    description: Operaciones para a√±adir/quitar/modificar juegos en Tier Lists
  - name: "üß± NivelTier"
    description: Operaciones sobre los niveles dentro de una Tier List
  - name: "üéÆ Plataforma"
    description: Operaciones sobre plataformas de videojuegos
  - name: "ü§ù PlataformaUsuario"
    description: Operaciones sobre la relaci√≥n entre usuarios y plataformas
  - name: "üìä Ranking"
    description: Operaciones sobre rankings de juegos
  - name: "üë• Amistad"
    description: Operaciones sobre relaciones de amistad entre usuarios
  - name: "üß© Otros (IGDB)"
    description: Endpoints de solo lectura para obtener datos de IGDB (G√©neros, Motores, etc.)

paths:
  # --- Usuario ---
  /usuarios:
    post:
      tags:
        - "üßë Usuario"
      summary: Registrar un nuevo usuario
      operationId: registrarUsuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioCreate'
      responses:
        '201':
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '400':
          description: Datos de entrada inv√°lidos
  /usuarios/{id}:
    get:
      tags:
        - "üßë Usuario"
      summary: Obtener usuario por ID (interno)
      operationId: getUsuarioById
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del usuario
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Detalles del usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuario no encontrado
    put:
      tags:
        - "üßë Usuario"
      summary: Actualizar informaci√≥n de un usuario
      operationId: actualizarUsuario
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del usuario
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsuarioUpdate' # Schema espec√≠fico para update
      responses:
        '200':
          description: Usuario actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '400':
          description: Datos de entrada inv√°lidos
        '404':
          description: Usuario no encontrado
    delete:
      tags:
        - "üßë Usuario"
      summary: Eliminar un usuario (marcado l√≥gico)
      operationId: eliminarUsuario
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del usuario
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Usuario eliminado (marcado) exitosamente
        '404':
          description: Usuario no encontrado
  /usuarios/public/{publicId}:
    get:
      tags:
        - "üßë Usuario"
      summary: Obtener perfil p√∫blico por UUID
      operationId: getUsuarioByPublicId
      parameters:
        - name: publicId
          in: path
          required: true
          description: Identificador p√∫blico UUID del usuario
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Perfil p√∫blico del usuario (datos limitados seg√∫n visibilidad)
          content:
            application/json:
              # Definir un schema espec√≠fico 'UsuarioPublico' si es necesario
              schema:
                $ref: '#/components/schemas/Usuario' # Simplificado, ajustar si es necesario
        '404':
          description: Usuario no encontrado

  # --- PerfilUsuario ---
  /usuarios/{id}/perfil:
    get:
      tags:
        - "üé≠ PerfilUsuario"
      summary: Obtener el perfil de un usuario
      operationId: getPerfilUsuario
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del usuario
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Detalles del perfil del usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerfilUsuario'
        '404':
          description: Usuario o perfil no encontrado
    put:
      tags:
        - "üé≠ PerfilUsuario"
      summary: Actualizar el perfil de un usuario (excepto foto)
      operationId: updatePerfilUsuario
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del usuario
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PerfilUsuarioUpdate' # Schema espec√≠fico sin foto
      responses:
        '200':
          description: Perfil actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerfilUsuario'
        '400':
          description: Datos de entrada inv√°lidos
        '404':
          description: Usuario o perfil no encontrado
  /usuarios/{id}/perfil/foto:
    put:
      tags:
        - "üé≠ PerfilUsuario"
      summary: Subir o actualizar la foto de perfil
      operationId: updateFotoPerfilUsuario
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del usuario
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                foto:
                  type: string
                  format: binary # Indica que es un archivo
              required:
                - foto
      responses:
        '200':
          description: Foto de perfil actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerfilUsuario' # Devuelve el perfil actualizado
        '400':
          description: Archivo inv√°lido o demasiado grande
        '404':
          description: Usuario o perfil no encontrado

  # --- Juego ---
  /juegos/{id}:
    get:
      tags:
        - "üéÆ Juego"
      summary: Obtener detalles de un juego por ID interno
      operationId: getJuegoById
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del juego
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Detalles completos del juego
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Juego'
        '404':
          description: Juego no encontrado
    put:
      tags:
        - "üéÆ Juego"
      summary: Actualizar informaci√≥n extendida de un juego (uso interno/admin)
      operationId: updateJuegoExtendido
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del juego
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Juego' # O un schema espec√≠fico para actualizaci√≥n
      responses:
        '200':
          description: Juego actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Juego'
        '400':
          description: Datos inv√°lidos
        '404':
          description: Juego no encontrado

  # --- JuegoUsuario ---
  /usuarios/{id}/juegos:
    get:
      tags:
        - "üßæ JuegoUsuario"
      summary: Obtener todos los juegos asociados a un usuario
      operationId: getJuegosUsuario
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del usuario
          schema:
            type: integer
            format: int64
        # A√±adir par√°metros de query para filtros (estado, posesion, etc.) si es necesario
      responses:
        '200':
          description: Lista de juegos del usuario
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JuegoUsuarioDetalle' # Schema que incluye detalles del juego
        '404':
          description: Usuario no encontrado
    post:
      tags:
        - "üßæ JuegoUsuario"
      summary: A√±adir un juego al perfil del usuario
      operationId: addJuegoUsuario
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del usuario
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JuegoUsuarioCreate' # Necesita al menos juego_id y opcionalmente otros campos iniciales
      responses:
        '201':
          description: Juego a√±adido al perfil del usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JuegoUsuario'
        '400':
          description: Datos inv√°lidos (e.g., juego_id no existe)
        '404':
          description: Usuario no encontrado
        '409':
           description: El juego ya est√° asociado al usuario
  /usuarios/{id}/juegos/{juegoId}:
    get:
      tags:
        - "üßæ JuegoUsuario"
      summary: Obtener detalles de la relaci√≥n juego-usuario espec√≠fica
      operationId: getJuegoUsuarioDetalle
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del usuario
          schema:
            type: integer
            format: int64
        - name: juegoId
          in: path
          required: true
          description: ID interno del juego
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Detalles de la relaci√≥n juego-usuario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JuegoUsuarioDetalle' # Podr√≠a incluir datos del juego
        '404':
          description: Usuario, juego o relaci√≥n no encontrados
    put:
      tags:
        - "üßæ JuegoUsuario"
      summary: Editar datos de un juego en el perfil del usuario
      operationId: updateJuegoUsuario
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del usuario
          schema:
            type: integer
            format: int64
        - name: juegoId
          in: path
          required: true
          description: ID interno del juego
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JuegoUsuarioUpdate' # Schema con campos editables
      responses:
        '200':
          description: Datos actualizados exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JuegoUsuario'
        '400':
          description: Datos inv√°lidos
        '404':
          description: Usuario, juego o relaci√≥n no encontrados
    delete:
      tags:
        - "üßæ JuegoUsuario"
      summary: Eliminar la relaci√≥n entre un usuario y un juego
      operationId: deleteJuegoUsuario
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del usuario
          schema:
            type: integer
            format: int64
        - name: juegoId
          in: path
          required: true
          description: ID interno del juego
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Relaci√≥n eliminada exitosamente
        '404':
          description: Usuario, juego o relaci√≥n no encontrados

  # --- DuracionJuego ---
  /juegos/{id}/duracion:
    get:
      tags:
        - "‚è±Ô∏è DuracionJuego"
      summary: Obtener la duraci√≥n promedio de un juego (calculada)
      operationId: getDuracionJuego
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del juego
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Duraci√≥n promedio del juego
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuracionJuego'
        '404':
          description: Juego o datos de duraci√≥n no encontrados
  /juegos/{id}/duracion/recalcular:
    post:
      tags:
        - "‚è±Ô∏è DuracionJuego"
      summary: Recalcular la duraci√≥n promedio de un juego (acci√≥n interna/programada)
      operationId: recalcularDuracionJuego
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del juego
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Rec√°lculo completado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DuracionJuego'
        '404':
          description: Juego no encontrado
        '500':
          description: Error durante el rec√°lculo

  # --- Lista ---
  /usuarios/{id}/listas:
    get:
      tags:
        - "üóÇÔ∏è Lista"
      summary: Obtener todas las listas de un usuario
      operationId: getListasUsuario
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del usuario
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Listas del usuario
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lista'
        '404':
          description: Usuario no encontrado
    post:
      tags:
        - "üóÇÔ∏è Lista"
      summary: Crear una nueva lista para un usuario
      operationId: createLista
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del usuario
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: Nombre de la nueva lista
              required:
                - nombre
      responses:
        '201':
          description: Lista creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lista'
        '400':
          description: Nombre inv√°lido o faltante
        '404':
          description: Usuario no encontrado
  /listas/{id}:
    get:
      tags:
        - "üóÇÔ∏è Lista"
      summary: Obtener detalles de una lista (incluyendo juegos)
      operationId: getListaById
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la lista
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Detalles de la lista
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListaDetalle' # Schema que incluye los juegos
        '404':
          description: Lista no encontrada
    put:
      tags:
        - "üóÇÔ∏è Lista"
      summary: Editar una lista (ej. cambiar nombre)
      operationId: updateLista
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la lista
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: Nuevo nombre de la lista
              required:
                - nombre
      responses:
        '200':
          description: Lista actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lista'
        '400':
          description: Nombre inv√°lido o faltante
        '404':
          description: Lista no encontrada
    delete:
      tags:
        - "üóÇÔ∏è Lista"
      summary: Eliminar una lista
      operationId: deleteLista
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la lista
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Lista eliminada exitosamente
        '404':
          description: Lista no encontrada

  # --- ListaJuego ---
  /listas/{id}/juegos:
    post:
      tags:
        - "üéÆ ListaJuego"
      summary: A√±adir un juego a una lista
      operationId: addJuegoToLista
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la lista
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                juego_id:
                  type: integer
                  format: int64
                  description: ID del juego a a√±adir
              required:
                - juego_id
      responses:
        '201':
          description: Juego a√±adido a la lista
          # Podr√≠a devolver la lista actualizada o solo confirmaci√≥n
        '400':
          description: ID de juego inv√°lido
        '404':
          description: Lista o juego no encontrados
        '409':
          description: El juego ya est√° en la lista
  /listas/{listaId}/juegos/{juegoId}:
    delete:
      tags:
        - "üéÆ ListaJuego"
      summary: Quitar un juego de una lista
      operationId: removeJuegoFromLista
      parameters:
        - name: listaId
          in: path
          required: true
          description: ID de la lista
          schema:
            type: integer
            format: int64
        - name: juegoId
          in: path
          required: true
          description: ID del juego a quitar
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Juego quitado de la lista exitosamente
        '404':
          description: Lista, juego o relaci√≥n no encontrados

  # --- TierList ---
  /usuarios/{id}/tierlists:
    get:
      tags:
        - "üèÜ TierList"
      summary: Obtener todas las Tier Lists de un usuario
      operationId: getTierListsUsuario
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del usuario
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Tier Lists del usuario
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TierList'
        '404':
          description: Usuario no encontrado
    post:
      tags:
        - "üèÜ TierList"
      summary: Crear una nueva Tier List para un usuario
      operationId: createTierList
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del usuario
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: Nombre de la nueva Tier List
                # Opcionalmente, permitir crear niveles iniciales aqu√≠
              required:
                - nombre
      responses:
        '201':
          description: Tier List creada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TierList' # Podr√≠a incluir niveles por defecto
        '400':
          description: Nombre inv√°lido o faltante
        '404':
          description: Usuario no encontrado
  /tierlists/{id}:
    get:
      tags:
        - "üèÜ TierList"
      summary: Obtener detalles de una Tier List (incluyendo niveles y juegos por nivel)
      operationId: getTierListById
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la Tier List
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Detalles de la Tier List
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TierListDetalle' # Schema complejo con niveles y juegos
        '404':
          description: Tier List no encontrada
    put:
      tags:
        - "üèÜ TierList"
      summary: Editar una Tier List (ej. cambiar nombre)
      operationId: updateTierList
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la Tier List
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  description: Nuevo nombre de la Tier List
              required:
                - nombre
      responses:
        '200':
          description: Tier List actualizada exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TierList'
        '400':
          description: Nombre inv√°lido o faltante
        '404':
          description: Tier List no encontrada
    delete:
      tags:
        - "üèÜ TierList"
      summary: Eliminar una Tier List
      operationId: deleteTierList
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la Tier List
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Tier List eliminada exitosamente
        '404':
          description: Tier List no encontrada

  # --- TierListJuego ---
  /tierlists/{id}/juegos:
    post:
      tags:
        - "üéÆ TierListJuego"
      summary: A√±adir un juego a un nivel espec√≠fico de una Tier List
      operationId: addJuegoToTierList
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la Tier List
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                juego_id:
                  type: integer
                  format: int64
                  description: ID del juego a a√±adir
                nivelTier_id:
                  type: integer
                  format: int64
                  description: ID del nivel donde a√±adir el juego
              required:
                - juego_id
                - nivelTier_id
      responses:
        '201':
          description: Juego a√±adido a la Tier List
        '400':
          description: IDs inv√°lidos o faltantes
        '404':
          description: Tier List, juego o nivel no encontrados
        '409':
          description: El juego ya est√° en esta Tier List (en alg√∫n nivel)
  /tierlists/{id}/juegos/{juegoId}:
    put:
      tags:
        - "üéÆ TierListJuego"
      summary: Modificar el nivel de un juego dentro de una Tier List
      operationId: updateJuegoInTierList
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la Tier List
          schema:
            type: integer
            format: int64
        - name: juegoId
          in: path
          required: true
          description: ID del juego a modificar
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nivelTier_id:
                  type: integer
                  format: int64
                  description: ID del nuevo nivel para el juego
              required:
                - nivelTier_id
      responses:
        '200':
          description: Nivel del juego actualizado
        '400':
          description: ID de nivel inv√°lido o faltante
        '404':
          description: Tier List, juego, nivel o relaci√≥n no encontrados
    delete:
      tags:
        - "üéÆ TierListJuego"
      summary: Quitar un juego de una Tier List
      operationId: removeJuegoFromTierList
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la Tier List
          schema:
            type: integer
            format: int64
        - name: juegoId
          in: path
          required: true
          description: ID del juego a quitar
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Juego quitado de la Tier List exitosamente
        '404':
          description: Tier List, juego o relaci√≥n no encontrados

  # --- NivelTier ---
  /tierlists/{id}/niveles:
    get:
      tags:
        - "üß± NivelTier"
      summary: Obtener todos los niveles de una Tier List espec√≠fica
      operationId: getNivelesTierList
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la Tier List
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Lista de niveles de la Tier List (ordenados)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NivelTier'
        '404':
          description: Tier List no encontrada
    post:
      tags:
        - "üß± NivelTier"
      summary: Crear un nuevo nivel en una Tier List
      operationId: createNivelTier
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la Tier List
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NivelTierCreate' # Schema sin ID, con nombre, orden, color, etc.
      responses:
        '201':
          description: Nivel creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NivelTier'
        '400':
          description: Datos inv√°lidos (e.g., nombre u orden faltante)
        '404':
          description: Tier List no encontrada
  /niveles/{id}:
    put:
      tags:
        - "üß± NivelTier"
      summary: Editar un nivel de Tier List (nombre, color, orden, descripci√≥n)
      operationId: updateNivelTier
      parameters:
        - name: id
          in: path
          required: true
          description: ID del NivelTier
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NivelTierUpdate' # Schema con campos editables
      responses:
        '200':
          description: Nivel actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NivelTier'
        '400':
          description: Datos inv√°lidos
        '404':
          description: Nivel no encontrado
    delete:
      tags:
        - "üß± NivelTier"
      summary: Eliminar un nivel de Tier List
      operationId: deleteNivelTier
      parameters:
        - name: id
          in: path
          required: true
          description: ID del NivelTier
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Nivel eliminado exitosamente (puede requerir reasignar juegos)
        '404':
          description: Nivel no encontrado
        '409':
           description: Conflicto, el nivel contiene juegos (requiere acci√≥n adicional)

  # --- Plataforma ---
  /plataformas:
    get:
      tags:
        - "üéÆ Plataforma"
      summary: Obtener todas las plataformas disponibles
      operationId: getPlataformas
      responses:
        '200':
          description: Lista de plataformas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plataforma'
    post:
      tags:
        - "üéÆ Plataforma"
      summary: Crear una nueva plataforma (uso interno/admin)
      operationId: createPlataforma
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlataformaCreate'
      responses:
        '201':
          description: Plataforma creada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plataforma'
        '400':
          description: Datos inv√°lidos
  /plataformas/{id}:
    get:
      tags:
        - "üéÆ Plataforma"
      summary: Obtener detalles de una plataforma
      operationId: getPlataformaById
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la plataforma
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Detalles de la plataforma
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plataforma'
        '404':
          description: Plataforma no encontrada
    put:
      tags:
        - "üéÆ Plataforma"
      summary: Editar una plataforma (uso interno/admin)
      operationId: updatePlataforma
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la plataforma
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlataformaUpdate'
      responses:
        '200':
          description: Plataforma actualizada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Plataforma'
        '400':
          description: Datos inv√°lidos
        '404':
          description: Plataforma no encontrada
    delete:
      tags:
        - "üéÆ Plataforma"
      summary: Eliminar una plataforma (uso interno/admin)
      operationId: deletePlataforma
      parameters:
        - name: id
          in: path
          required: true
          description: ID de la plataforma
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Plataforma eliminada
        '404':
          description: Plataforma no encontrada

  # --- PlataformaUsuario ---
  /usuarios/{id}/plataformas:
    get:
      tags:
        - "ü§ù PlataformaUsuario"
      summary: Obtener las plataformas asociadas a un usuario
      operationId: getPlataformasUsuario
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del usuario
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Lista de plataformas del usuario
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plataforma' # Devuelve las plataformas, no la entidad de relaci√≥n
        '404':
          description: Usuario no encontrado
    # Nota: Falta un POST para asociar una plataforma a un usuario si es necesario
  /usuarios/{id}/plataformas/{plataformaId}:
    delete:
      tags:
        - "ü§ù PlataformaUsuario"
      summary: Eliminar la asociaci√≥n entre un usuario y una plataforma
      operationId: deletePlataformaUsuario
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del usuario
          schema:
            type: integer
            format: int64
        - name: plataformaId
          in: path
          required: true
          description: ID de la plataforma
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Asociaci√≥n eliminada exitosamente
        '404':
          description: Usuario, plataforma o asociaci√≥n no encontrados

  # --- Ranking ---
  /rankings:
    get:
      tags:
        - "üìä Ranking"
      summary: Obtener rankings globales (ej. top juegos por puntuaci√≥n media)
      operationId: getGlobalRankings
      parameters:
        # A√±adir par√°metros de query para paginaci√≥n, orden, etc.
        - name: limit
          in: query
          description: N√∫mero m√°ximo de resultados
          schema:
            type: integer
            default: 20
        - name: offset
          in: query
          description: N√∫mero de resultados a saltar (paginaci√≥n)
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Lista de juegos rankeados
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RankingDetalle' # Incluye info del juego y ranking
  /juegos/{id}/ranking:
    get:
      tags:
        - "üìä Ranking"
      summary: Obtener la informaci√≥n de ranking para un juego espec√≠fico
      operationId: getJuegoRanking
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del juego
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Datos de ranking del juego
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ranking'
        '404':
          description: Juego o datos de ranking no encontrados

  # --- Amistad ---
  /usuarios/{id}/amigos:
    get:
      tags:
        - "üë• Amistad"
      summary: Obtener la lista de amigos de un usuario
      operationId: getAmigosUsuario
      parameters:
        - name: id
          in: path
          required: true
          description: ID interno del usuario
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Lista de amigos (probablemente perfiles b√°sicos de usuario)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioSummary' # Un schema resumido de Usuario
        '404':
          description: Usuario no encontrado
  /usuarios/{id}/amigos/{amigoId}:
    post:
      tags:
        - "üë• Amistad"
      summary: Enviar una solicitud de amistad o aceptar una existente (depende de implementaci√≥n)
      operationId: addAmigo
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario que inicia la acci√≥n
          schema:
            type: integer
            format: int64
        - name: amigoId
          in: path
          required: true
          description: ID del usuario a a√±adir como amigo
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Amistad creada o solicitud enviada
        '400':
          description: No se puede a√±adir a uno mismo
        '404':
          description: Uno o ambos usuarios no encontrados
        '409':
          description: Ya son amigos o hay una solicitud pendiente
    delete:
      tags:
        - "üë• Amistad"
      summary: Eliminar una amistad existente
      operationId: removeAmigo
      parameters:
        - name: id
          in: path
          required: true
          description: ID del usuario que inicia la acci√≥n
          schema:
            type: integer
            format: int64
        - name: amigoId
          in: path
          required: true
          description: ID del amigo a eliminar
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Amistad eliminada exitosamente
        '404':
          description: Usuario, amigo o amistad no encontrados

  # --- Otros elementos IGDB ---
  /generos:
    get:
      tags: ["üß© Otros (IGDB)"]
      summary: Obtener lista de g√©neros
      operationId: getGeneros
      responses:
        '200':
          description: Lista de g√©neros
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Genero'
  /motores:
    get:
      tags: ["üß© Otros (IGDB)"]
      summary: Obtener lista de motores gr√°ficos
      operationId: getMotoresGraficos
      responses:
        '200':
          description: Lista de motores gr√°ficos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MotorGrafico'
  /companias:
    get:
      tags: ["üß© Otros (IGDB)"]
      summary: Obtener lista de compa√±√≠as (developers, publishers, etc.)
      operationId: getCompanias
      responses:
        '200':
          description: Lista de compa√±√≠as
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Compania'
  /keywords:
    get:
      tags: ["üß© Otros (IGDB)"]
      summary: Obtener lista de keywords
      operationId: getKeywords
      responses:
        '200':
          description: Lista de keywords
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Keyword'
  /plataformas-igdb: # Distinto de /plataformas que maneja nuestras entidades Plataforma
    get:
      tags: ["üß© Otros (IGDB)"]
      summary: Obtener lista de plataformas de IGDB
      operationId: getPlataformasIGDB
      responses:
        '200':
          description: Lista de plataformas de IGDB
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PlataformaIGDB' # Schema espec√≠fico para las de IGDB si difiere
  /modos-juego:
    get:
      tags: ["üß© Otros (IGDB)"]
      summary: Obtener lista de modos de juego
      operationId: getModosJuego
      responses:
        '200':
          description: Lista de modos de juego
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModoJuego'
  /perspectivas:
    get:
      tags: ["üß© Otros (IGDB)"]
      summary: Obtener lista de perspectivas de jugador
      operationId: getPerspectivasJugador
      responses:
        '200':
          description: Lista de perspectivas de jugador
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PerspectivaJugador'
  /artworks:
    get:
      tags: ["üß© Otros (IGDB)"]
      summary: Obtener lista de artworks (general, no por juego)
      operationId: getArtworks
      responses:
        '200':
          description: Lista de artworks (URLs)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artwork'
  /videos:
    get:
      tags: ["üß© Otros (IGDB)"]
      summary: Obtener lista de videos (general, no por juego)
      operationId: getVideos
      responses:
        '200':
          description: Lista de videos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Video'
  /webs:
    get:
      tags: ["üß© Otros (IGDB)"]
      summary: Obtener lista de webs relacionadas (general, no por juego)
      operationId: getWebs
      responses:
        '200':
          description: Lista de webs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Web'
  /idiomas:
    get:
      tags: ["üß© Otros (IGDB)"]
      summary: Obtener lista de idiomas y tipos de soporte
      operationId: getIdiomas
      responses:
        '200':
          description: Lista de idiomas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Idioma'
  /temas:
    get:
      tags: ["üß© Otros (IGDB)"]
      summary: Obtener lista de temas
      operationId: getTemas
      responses:
        '200':
          description: Lista de temas
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tema' # Este es el Tema de IGDB, diferente al TemaEnum del PerfilUsuario
  /franquicias:
    get:
      tags: ["üß© Otros (IGDB)"]
      summary: Obtener lista de franquicias
      operationId: getFranquicias
      responses:
        '200':
          description: Lista de franquicias
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Franquicia'

components:
  schemas:
    # --- Entidades Principales ---
    Usuario:
      type: object
      properties:
        id:
          type: integer
          format: int64
          description: ID interno √∫nico del usuario
          readOnly: true
        publicId:
          type: string
          format: uuid
          description: Identificador p√∫blico √∫nico del usuario
          readOnly: true
        nombreUsuario:
          type: string
          description: Nombre de usuario elegido
        email:
          type: string
          format: email
          description: Correo electr√≥nico del usuario
        # Contrase√±a no se expone
        fechaRegistro:
          type: string
          format: date-time
          description: Fecha y hora del registro
          readOnly: true
        fechaCreacion:
          type: string
          format: date-time
          readOnly: true
        fechaModificacion:
          type: string
          format: date-time
          readOnly: true
        fechaEliminacion:
          type: string
          format: date-time
          nullable: true
          readOnly: true
      required:
        - nombreUsuario
        - email
    UsuarioCreate: # Para POST /usuarios
      type: object
      properties:
        nombreUsuario:
          type: string
        email:
          type: string
          format: email
        contrase√±a:
          type: string
          format: password # Solo indicativo
          description: Contrase√±a en texto plano (se hashear√° en backend)
      required:
        - nombreUsuario
        - email
        - contrase√±a
    UsuarioUpdate: # Para PUT /usuarios/{id}
      type: object
      properties:
        nombreUsuario:
          type: string
        email:
          type: string
          format: email
        contrase√±a_actual: # Opcional, si se permite cambio de contrase√±a
          type: string
          format: password
        nueva_contrase√±a: # Opcional, si se permite cambio de contrase√±a
          type: string
          format: password
    UsuarioSummary: # Schema resumido para listas de amigos, etc.
       type: object
       properties:
         publicId:
           type: string
           format: uuid
           readOnly: true
         nombreUsuario:
           type: string
         # Podr√≠a incluir foto de perfil peque√±a
       required:
         - publicId
         - nombreUsuario

    PerfilUsuario:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        tema:
          $ref: '#/components/schemas/TemaEnum'
        fotoPerfil:
          type: string
          format: byte # Base64 encoded string si se devuelve en JSON
          description: Foto de perfil como string Base64 (o null si no hay)
          nullable: true
          # Alternativa: Devolver una URL a la imagen en lugar del blob
        notificaciones:
          type: boolean
          description: Preferencia de notificaciones activadas/desactivadas
        visibilidadPerfil:
          $ref: '#/components/schemas/VisibilidadEnum'
        usuario_id:
          type: integer
          format: int64
          readOnly: true
        fechaCreacion:
          type: string
          format: date-time
          readOnly: true
        fechaModificacion:
          type: string
          format: date-time
          readOnly: true
        fechaEliminacion:
          type: string
          format: date-time
          nullable: true
          readOnly: true
      required:
        - tema
        - notificaciones
        - visibilidadPerfil
    PerfilUsuarioUpdate: # Para PUT /usuarios/{id}/perfil
      type: object
      properties:
        tema:
          $ref: '#/components/schemas/TemaEnum'
        notificaciones:
          type: boolean
        visibilidadPerfil:
          $ref: '#/components/schemas/VisibilidadEnum'
      required:
        - tema
        - notificaciones
        - visibilidadPerfil

    Plataforma:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        idigdb:
          type: integer
          description: ID externo de la plataforma en IGDB
        nombre:
          type: string
          description: Nombre principal de la plataforma
        nombreAlternativo:
          type: string
          nullable: true
          description: Nombre alternativo o com√∫n
        logoUrl:
          type: string
          format: url
          nullable: true
          description: URL al logo de la plataforma
        fechaCreacion:
          type: string
          format: date-time
          readOnly: true
        fechaModificacion:
          type: string
          format: date-time
          readOnly: true
        fechaEliminacion:
          type: string
          format: date-time
          nullable: true
          readOnly: true
      required:
        - idigdb
        - nombre
    PlataformaCreate:
      type: object
      properties:
        idigdb:
          type: integer
        nombre:
          type: string
        nombreAlternativo:
          type: string
          nullable: true
        logoUrl:
          type: string
          format: url
          nullable: true
      required:
        - idigdb
        - nombre
    PlataformaUpdate:
      type: object
      properties:
        idigdb:
          type: integer
        nombre:
          type: string
        nombreAlternativo:
          type: string
          nullable: true
        logoUrl:
          type: string
          format: url
          nullable: true

    Juego:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        idigdb:
          type: integer
          format: int64
          description: ID externo del juego en IGDB
        nombre:
          type: string
        slug:
          type: string
          description: Identificador amigable para URL
        gameType:
          $ref: '#/components/schemas/GameTypeEnum'
        resumen:
          type: string
          nullable: true
        historia:
          type: string
          nullable: true
        totalRating:
          type: number
          format: float
          nullable: true
          description: Puntuaci√≥n media de IGDB (0-100)
        totalRatingCount:
          type: integer
          nullable: true
          description: N√∫mero de votos en IGDB
        fechaLanzamiento:
          type: string
          format: date
          nullable: true
        coverUrl:
          type: string
          format: url
          nullable: true
          description: URL de la portada principal
        generos:
          type: array
          items:
            $ref: '#/components/schemas/Genero'
        motores:
          type: array
          items:
            $ref: '#/components/schemas/MotorGrafico'
        modosJuego:
          type: array
          items:
            $ref: '#/components/schemas/ModoJuego'
        companias:
          type: array
          items:
            $ref: '#/components/schemas/Compania'
        keywords:
          type: array
          items:
            $ref: '#/components/schemas/Keyword'
        plataformas: # Referencia a PlataformaIGDB, no a nuestra entidad Plataforma
          type: array
          items:
            $ref: '#/components/schemas/PlataformaIGDB'
        temas:
          type: array
          items:
            $ref: '#/components/schemas/Tema' # Tema de IGDB
        perspectivas:
          type: array
          items:
            $ref: '#/components/schemas/PerspectivaJugador'
        status:
          $ref: '#/components/schemas/StatusEnum'
        imagenes:
          type: array
          items:
            $ref: '#/components/schemas/Artwork'
        videos:
          type: array
          items:
            $ref: '#/components/schemas/Video'
        webs:
          type: array
          items:
            $ref: '#/components/schemas/Web'
        idiomas: # Informaci√≥n de soporte de idiomas
          type: array
          items:
            $ref: '#/components/schemas/Idioma'
        franquicias:
          type: array
          items:
            $ref: '#/components/schemas/Franquicia'
        dlcs: # Referencia a otros juegos (con gameType DLC)
          type: array
          items:
            type: object # O un $ref a un 'JuegoSummary' si se quiere evitar recursi√≥n completa
            properties:
              id:
                type: integer
                format: int64
              nombre:
                type: string
              idigdb:
                 type: integer
                 format: int64
        expansiones: # Referencia a otros juegos (con gameType EXPANSION)
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              nombre:
                type: string
              idigdb:
                 type: integer
                 format: int64
        similares: # Referencia a otros juegos
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              nombre:
                type: string
              idigdb:
                 type: integer
                 format: int64
      required:
        - idigdb
        - nombre
        - slug
        - gameType
        - status

    JuegoUsuario:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        estado:
          $ref: '#/components/schemas/EstadoEnum'
        posesion:
          type: boolean
          description: Indica si el usuario posee el juego
        puntuacion:
          type: number
          format: float
          nullable: true
          description: Puntuaci√≥n personal del usuario (e.g., 0-10)
        comentario:
          type: string
          nullable: true
          description: Comentario p√∫blico del usuario sobre el juego
        comentarioPrivado:
          type: string
          nullable: true
          description: Comentario privado del usuario
        fechaInicio:
          type: string
          format: date
          nullable: true
          description: Fecha en que el usuario empez√≥ a jugar
        fechaFin:
          type: string
          format: date
          nullable: true
          description: Fecha en que el usuario termin√≥ de jugar
        duracionHistoria:
          type: number
          format: float
          nullable: true
          description: Horas dedicadas a la historia principal
        duracionHistoriaSecundarias:
          type: number
          format: float
          nullable: true
          description: Horas dedicadas a historia + secundarias
        duracionCompletista:
          type: number
          format: float
          nullable: true
          description: Horas dedicadas para completar al 100%
        importado:
          type: boolean
          description: Indica si la entrada fue importada de otro servicio
          readOnly: true
        plataforma_id:
          type: integer
          format: int64
          nullable: true
          description: ID de la plataforma en la que lo jug√≥/posee (referencia a nuestra entidad Plataforma)
        usuario_id:
          type: integer
          format: int64
          readOnly: true
        juego_id:
          type: integer
          format: int64
          readOnly: true
        fechaCreacion:
          type: string
          format: date-time
          readOnly: true
        fechaModificacion:
          type: string
          format: date-time
          readOnly: true
        fechaEliminacion:
          type: string
          format: date-time
          nullable: true
          readOnly: true
      required:
        - estado
        - posesion
        - importado
    JuegoUsuarioCreate: # Para POST /usuarios/{id}/juegos
      type: object
      properties:
        juego_id:
          type: integer
          format: int64
        estado:
          $ref: '#/components/schemas/EstadoEnum'
        posesion:
          type: boolean
        puntuacion:
          type: number
          format: float
          nullable: true
        comentario:
          type: string
          nullable: true
        comentarioPrivado:
          type: string
          nullable: true
        fechaInicio:
          type: string
          format: date
          nullable: true
        fechaFin:
          type: string
          format: date
          nullable: true
        duracionHistoria:
          type: number
          format: float
          nullable: true
        duracionHistoriaSecundarias:
          type: number
          format: float
          nullable: true
        duracionCompletista:
          type: number
          format: float
          nullable: true
        plataforma_id:
          type: integer
          format: int64
          nullable: true
      required:
        - juego_id
        - estado
        - posesion
    JuegoUsuarioUpdate: # Para PUT /usuarios/{id}/juegos/{juegoId}
      type: object
      properties:
        estado:
          $ref: '#/components/schemas/EstadoEnum'
        posesion:
          type: boolean
        puntuacion:
          type: number
          format: float
          nullable: true
        comentario:
          type: string
          nullable: true
        comentarioPrivado:
          type: string
          nullable: true
        fechaInicio:
          type: string
          format: date
          nullable: true
        fechaFin:
          type: string
          format: date
          nullable: true
        duracionHistoria:
          type: number
          format: float
          nullable: true
        duracionHistoriaSecundarias:
          type: number
          format: float
          nullable: true
        duracionCompletista:
          type: number
          format: float
          nullable: true
        plataforma_id:
          type: integer
          format: int64
          nullable: true
    JuegoUsuarioDetalle: # Para GET /usuarios/{id}/juegos y GET /usuarios/{id}/juegos/{juegoId}
      type: object
      allOf: # Hereda de JuegoUsuario
        - $ref: '#/components/schemas/JuegoUsuario'
      properties:
        juego: # A√±ade detalles del juego asociado
           $ref: '#/components/schemas/JuegoSummary' # Un schema resumido del juego
        plataforma: # A√±ade detalles de la plataforma asociada
            $ref: '#/components/schemas/Plataforma' # Opcional, si se quiere devolver el objeto completo

    JuegoSummary: # Schema resumido de Juego
      type: object
      properties:
        id:
          type: integer
          format: int64
        idigdb:
          type: integer
          format: int64
        nombre:
          type: string
        slug:
          type: string
        coverUrl:
          type: string
          format: url
          nullable: true
        fechaLanzamiento:
          type: string
          format: date
          nullable: true
      required:
        - id
        - idigdb
        - nombre
        - slug

    DuracionJuego:
      type: object
      properties:
        id_duracion:
          type: integer
          format: int64
          readOnly: true
        juego_id:
          type: integer
          format: int64
          readOnly: true
        mediaHistoria:
          type: number
          format: float
          nullable: true
          description: Media de horas para completar la historia principal
        mediaHistoriaSecundarias:
          type: number
          format: float
          nullable: true
          description: Media de horas para completar historia + secundarias
        mediaCompletista:
          type: number
          format: float
          nullable: true
          description: Media de horas para completar al 100%
        numeroUsuarios:
          type: integer
          description: N√∫mero de usuarios que han aportado datos de duraci√≥n
      required:
        - juego_id
        - numeroUsuarios

    Lista:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        nombre:
          type: string
          description: Nombre de la lista
        usuario_id:
          type: integer
          format: int64
          readOnly: true
        fechaCreacion:
          type: string
          format: date-time
          readOnly: true
        fechaModificacion:
          type: string
          format: date-time
          readOnly: true
        fechaEliminacion:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        # Opcional: a√±adir contador de juegos
        num_juegos:
           type: integer
           readOnly: true
           description: N√∫mero de juegos en la lista
      required:
        - nombre
    ListaDetalle: # Para GET /listas/{id}
      type: object
      allOf:
        - $ref: '#/components/schemas/Lista'
      properties:
        juegos:
          type: array
          items:
            $ref: '#/components/schemas/JuegoSummary' # Lista de juegos en la lista

    TierList:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        nombre:
          type: string
          description: Nombre de la Tier List
        usuario_id:
          type: integer
          format: int64
          readOnly: true
        fechaCreacion:
          type: string
          format: date-time
          readOnly: true
        fechaModificacion:
          type: string
          format: date-time
          readOnly: true
        fechaEliminacion:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        # Opcional: a√±adir info de niveles o contador de juegos
      required:
        - nombre
    TierListDetalle: # Para GET /tierlists/{id}
      type: object
      allOf:
        - $ref: '#/components/schemas/TierList'
      properties:
        niveles: # Lista de niveles con sus juegos asociados
          type: array
          items:
            type: object
            properties:
              nivel:
                $ref: '#/components/schemas/NivelTier'
              juegos:
                type: array
                items:
                  $ref: '#/components/schemas/JuegoSummary'
            required:
              - nivel
              - juegos

    NivelTier:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        tierlist_id:
          type: integer
          format: int64
          readOnly: true
        nombre:
          type: string
          description: Nombre del nivel (e.g., "S", "A", "Meh")
        orden:
          type: integer
          description: Posici√≥n ordinal del nivel en la lista (0=Top)
        color:
          type: string
          nullable: true
          description: Color asociado al nivel (e.g., "#FF0000")
        descripcion:
          type: string
          nullable: true
          description: Descripci√≥n opcional del nivel
      required:
        - nombre
        - orden
    NivelTierCreate:
      type: object
      properties:
        nombre:
          type: string
        orden:
          type: integer
        color:
          type: string
          nullable: true
        descripcion:
          type: string
          nullable: true
      required:
        - nombre
        - orden
    NivelTierUpdate:
      type: object
      properties:
        nombre:
          type: string
        orden:
          type: integer
        color:
          type: string
          nullable: true
        descripcion:
          type: string
          nullable: true

    Ranking:
      type: object
      properties:
        juego_id:
          type: integer
          format: int64
          readOnly: true
        puntuacionMedia:
          type: number
          format: float
          nullable: true
          description: Puntuaci√≥n media calculada de los usuarios de CheckPoint
        numeroVotos:
          type: integer
          description: N√∫mero de usuarios de CheckPoint que han votado
      required:
        - juego_id
        - numeroVotos
    RankingDetalle: # Para GET /rankings
      type: object
      allOf:
        - $ref: '#/components/schemas/Ranking'
      properties:
        juego:
          $ref: '#/components/schemas/JuegoSummary' # Incluir info del juego

    # --- Entidades de IGDB (Simplificadas) ---
    Genero:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        nombre:
          type: string
      required: [nombre]
    MotorGrafico:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        nombre:
          type: string
      required: [nombre]
    Compania:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        nombre:
          type: string
        developer:
          type: boolean
        publisher:
          type: boolean
        porting:
          type: boolean
        supporting:
          type: boolean
      required: [nombre, developer, publisher, porting, supporting]
    Keyword:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        nombre:
          type: string
      required: [nombre]
    ModoJuego:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        nombre:
          type: string
      required: [nombre]
    PerspectivaJugador:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        nombre:
          type: string
      required: [nombre]
    Artwork:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        url:
          type: string
          format: url
      required: [url]
    Video:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        nombre:
          type: string
        videoId: # ID del video en la plataforma (e.g., YouTube)
          type: string
      required: [nombre, videoId]
    Web:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        url:
          type: string
          format: url
      required: [url]
    Idioma: # Representa el soporte de un idioma en un juego
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        nombre: # Nombre del idioma (e.g., "Espa√±ol")
          type: string
        tipoSoporte: # Tipo de soporte (e.g., Interfaz, Audio, Subt√≠tulos - usar enum o mapeo)
          type: integer
          description: Indica el tipo de soporte ( 1=Interfaz, 2=Audio, 3=Subt√≠tulos)
      required: [nombre, tipoSoporte]
    Tema: # Tema de IGDB (Action, Fantasy, etc.)
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        nombre:
          type: string
      required: [nombre]
    Franquicia:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        nombre:
          type: string
      required: [nombre]
    PlataformaIGDB: # Usado en Juego.plataformas, distinto de nuestra entidad Plataforma
       type: object
       properties:
         id: # ID de IGDB
           type: integer
           format: int64
           readOnly: true
         nombre:
           type: string
         # Otros campos relevantes de IGDB si es necesario
       required: [id, nombre]

    # --- Enums ---
    TemaEnum:
      type: string
      enum: [CLARO, OSCURO]
      description: Tema visual de la interfaz de usuario
    VisibilidadEnum:
      type: string
      enum: [PUBLICO, PRIVADO, SOLO_AMIGOS]
      description: Nivel de visibilidad del perfil del usuario
    GameTypeEnum:
      type: integer
      enum: [1, 2, 3]
      description: Tipo de juego ( JUEGO,  DLC,  EXPANSION)
    StatusEnum:
      type: integer
      enum: [1, 2, 3, 4, 5, 6, 7, 8]
      description: Estado del lanzamiento del juego ( RELEASED,  ALPHA,  BETA,  EARLY_ACCESS,  OFFLINE,  CANCELLED,  RUMORED,  DELISTED)
    EstadoEnum:
      type: string
      enum:
        - COMPLETADO_NO_SELECCIONAR
        - COMPLETADO_HISTORIA
        - COMPLETADO_HISTORIA_SECUNDARIAS
        - COMPLETADO_100
        - ARCHIVADO_NO_SELECCIONAR
        - ARCHIVADO_ABANDONADO
        - ARCHIVADO_NO_JUGANDO
        - DESEADO
        - JUGANDO_NO_SELECCIONAR
        - JUGANDO_PAUSADO
        - JUGANDO_INFINITO
      description: Estado personal del usuario respecto a un juego

  securitySchemes:
    bearerAuth: # Ejemplo de esquema de seguridad (JWT)
      type: http
      scheme: bearer
      bearerFormat: JWT

security: # Aplicar seguridad globalmente (o especificar por operaci√≥n)
  - bearerAuth: []